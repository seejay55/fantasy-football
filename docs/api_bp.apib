FORMAT: 1A

# Fantasy Football
API for accessing/manipulating data for a Fantasy Football application.

# Group Users
Resources related to users in the API.

## User Collection [/users]

### List All Users [GET]
+ Response 200 (application/json)

        [
            {
                "ID": 1,
                "Username": "test1",
                "ProfilePic": null
            },
            {
                "ID": 2,
                "Username": "test2",
                "ProfilePic": null
            }
        ]

## Authentication [/user/authenticate]
+ Request (application/json)

        {
            "ID": 1,
            "Username": "test1",
            "ProfilePic": null,
        }
+ Response 200 (application/json)


## User [/user/{user_id}]
+ Parameters
    + user_id (number) - ID of the user as an integer

### Get a User [GET]
Get a User by it's unique ID
+ Response 200 (application/json)

        [
            {
                "ID": 1,
                "Username": "test1",
                "ProfilePic": null,
            }
        ]

### Create a User [PUT]
+ Request (application/json)

        {
            "Username": "new_user",
            "Password": "super_secret_password"
        }

+ Response 204

## Update a User [PATCH]
+ Request (application/json)

        {
            "ID": 1,
            "Username": "test1",
            "ProfilePic": null,
        }

+ Response 204

### Delete a User [DELETE]
+ Response 204

# Group Leagues
Resources related to users in the API.

## League Collection [/leagues]

### List All Leagues [GET]
+ Response 200 (application/json)

        [
            {
                "id": 1,
                "name": "Test League",
                "year": 2016
            },
            {
                "id": 2,
                "name": "Test League 2",
                "year": 2016
            }
        ]

## League [/league/{league_id}]
+ Parameters
    + league_id (number) - ID of the league as an integer

### Get a League [GET]
Get a League by it's unique ID
+ Response 200 (application/json)

        [
            {
                "id": 1,
                "name": "Test League",
                "year": 2016
            }
        ]

## League Members Collection [/league/{league_id}/members]
+ Parameters
    + league_id (number) - ID of the league as an integer
    
### List All Members [GET]
+ Response 200 (application/json)

        [
            {
                "user_id": 1,
                "team_name": "Team 1",
                "commisioner": 1,
                "team_logo": null
            },
            {
                "user_id": 2,
                "team_name": "Team 2",
                "commisioner": 0,
                "team_logo": null
            }
        ]

## League Rosters Collection [/league/{league_id}/rosters]
+ Parameters
    + league_id (number) - ID of the league as an integer

### List all Rosters [GET]
+ Response 200 (application/json)

        [

        ]

## Team Roster [/league/{league_id}/roster/{user_id}]
+ Parameters
    + league_id (number) - ID of the league as an integer
    + user_id (number) - ID of the user who this roster belongs to

### View User Roster [GET]
+ Response 200 (application/json)

        [

        ]
